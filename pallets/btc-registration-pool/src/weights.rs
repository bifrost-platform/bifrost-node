
//! Autogenerated weights for `pallet_btc_registration_pool`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.0
//! DATE: 2025-08-08, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `benchmarker`, CPU: `AMD EPYC 7571`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// ./bifrost-node
// benchmark
// pallet
// --runtime
// ./bifrost_dev_runtime.compact.compressed.wasm
// --genesis-builder
// none
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template
// frame-weight-template.hbs
// --output
// weights.rs
// --hostname-override
// benchmarker
// --pallet
// pallet_btc_registration_pool

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_btc_registration_pool`.
pub trait WeightInfo {
	fn request_set_refund() -> Weight;
	fn request_vault() -> Weight;
	fn request_system_vault() -> Weight;
	fn submit_vault_key() -> Weight;
	fn migration_control() -> Weight;
	fn drop_previous_round() -> Weight;
	fn set_max_presubmission() -> Weight;
	fn set_multi_sig_ratio() -> Weight;
}

/// Weights for `pallet_btc_registration_pool` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::RegistrationPool` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::RegistrationPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::BondedVault` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::BondedVault` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::PendingSetRefunds` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::PendingSetRefunds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_set_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `150`
		//  Estimated: `3615`
		// Minimum execution time: 61_871_000 picoseconds.
		Weight::from_parts(63_391_000, 3615)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::BondedVault` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::BondedVault` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::RegistrationPool` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::RegistrationPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `RelayExecutiveMembership::Members` (r:1 w:0)
	/// Proof: `RelayExecutiveMembership::Members` (`max_values`: Some(1), `max_size`: Some(201), added: 696, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::PreSubmittedPubKeys` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::PreSubmittedPubKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::BondedPubKey` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::BondedPubKey` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::BondedRefund` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::BondedRefund` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `152`
		//  Estimated: `3617`
		// Minimum execution time: 193_252_000 picoseconds.
		Weight::from_parts(195_762_000, 3617)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::SystemVault` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::SystemVault` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `RelayExecutiveMembership::Members` (r:1 w:0)
	/// Proof: `RelayExecutiveMembership::Members` (`max_values`: Some(1), `max_size`: Some(201), added: 696, mode: `MaxEncodedLen`)
	fn request_system_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `55`
		//  Estimated: `3520`
		// Minimum execution time: 40_381_000 picoseconds.
		Weight::from_parts(58_861_000, 3520)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::RegistrationPool` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::RegistrationPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::BondedPubKey` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::BondedPubKey` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn submit_vault_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `150`
		//  Estimated: `3615`
		// Minimum execution time: 155_012_000 picoseconds.
		Weight::from_parts(156_351_000, 3615)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::SystemVault` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::SystemVault` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `RelayExecutiveMembership::Members` (r:1 w:0)
	/// Proof: `RelayExecutiveMembership::Members` (`max_values`: Some(1), `max_size`: Some(201), added: 696, mode: `MaxEncodedLen`)
	fn migration_control() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5`
		//  Estimated: `3470`
		// Minimum execution time: 41_731_000 picoseconds.
		Weight::from_parts(42_590_000, 3470)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::SystemVault` (r:0 w:1)
	/// Proof: `BtcRegistrationPool::SystemVault` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn drop_previous_round() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `8`
		//  Estimated: `1489`
		// Minimum execution time: 63_941_000 picoseconds.
		Weight::from_parts(65_491_000, 1489)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::MaxPreSubmission` (r:0 w:1)
	/// Proof: `BtcRegistrationPool::MaxPreSubmission` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_max_presubmission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_800_000 picoseconds.
		Weight::from_parts(8_111_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	fn set_multi_sig_ratio() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `1486`
		// Minimum execution time: 16_790_000 picoseconds.
		Weight::from_parts(21_740_000, 1486)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::RegistrationPool` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::RegistrationPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::BondedVault` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::BondedVault` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::PendingSetRefunds` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::PendingSetRefunds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_set_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `150`
		//  Estimated: `3615`
		// Minimum execution time: 61_871_000 picoseconds.
		Weight::from_parts(63_391_000, 3615)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::BondedVault` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::BondedVault` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::RegistrationPool` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::RegistrationPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `RelayExecutiveMembership::Members` (r:1 w:0)
	/// Proof: `RelayExecutiveMembership::Members` (`max_values`: Some(1), `max_size`: Some(201), added: 696, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::PreSubmittedPubKeys` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::PreSubmittedPubKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::BondedPubKey` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::BondedPubKey` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::BondedRefund` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::BondedRefund` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn request_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `152`
		//  Estimated: `3617`
		// Minimum execution time: 193_252_000 picoseconds.
		Weight::from_parts(195_762_000, 3617)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::SystemVault` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::SystemVault` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `RelayExecutiveMembership::Members` (r:1 w:0)
	/// Proof: `RelayExecutiveMembership::Members` (`max_values`: Some(1), `max_size`: Some(201), added: 696, mode: `MaxEncodedLen`)
	fn request_system_vault() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `55`
		//  Estimated: `3520`
		// Minimum execution time: 40_381_000 picoseconds.
		Weight::from_parts(58_861_000, 3520)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::RegistrationPool` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::RegistrationPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::BondedPubKey` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::BondedPubKey` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn submit_vault_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `150`
		//  Estimated: `3615`
		// Minimum execution time: 155_012_000 picoseconds.
		Weight::from_parts(156_351_000, 3615)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::SystemVault` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::SystemVault` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `RelayExecutiveMembership::Members` (r:1 w:0)
	/// Proof: `RelayExecutiveMembership::Members` (`max_values`: Some(1), `max_size`: Some(201), added: 696, mode: `MaxEncodedLen`)
	fn migration_control() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5`
		//  Estimated: `3470`
		// Minimum execution time: 41_731_000 picoseconds.
		Weight::from_parts(42_590_000, 3470)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `BtcRegistrationPool::ServiceState` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::ServiceState` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::CurrentRound` (r:1 w:0)
	/// Proof: `BtcRegistrationPool::CurrentRound` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `BtcRegistrationPool::SystemVault` (r:0 w:1)
	/// Proof: `BtcRegistrationPool::SystemVault` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn drop_previous_round() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `8`
		//  Estimated: `1489`
		// Minimum execution time: 63_941_000 picoseconds.
		Weight::from_parts(65_491_000, 1489)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::MaxPreSubmission` (r:0 w:1)
	/// Proof: `BtcRegistrationPool::MaxPreSubmission` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_max_presubmission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_800_000 picoseconds.
		Weight::from_parts(8_111_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `BtcRegistrationPool::MultiSigRatio` (r:1 w:1)
	/// Proof: `BtcRegistrationPool::MultiSigRatio` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	fn set_multi_sig_ratio() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `1486`
		// Minimum execution time: 16_790_000 picoseconds.
		Weight::from_parts(21_740_000, 1486)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}